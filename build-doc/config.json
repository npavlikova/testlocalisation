{"timestamp":"2019-06-04T12:31:09.013Z","version":"4.9.0","projectId":10438,"buildId":30354,"config":{"basePath":null,"customCSS":null,"customJS":"/* Функция для чтения значения token из document.cookie*/\nfunction getCookie(token) {\n  if (document.cookie.length > 0) {\n        c_start = document.cookie.indexOf(\"token\" + \"=\");\n        if (c_start !== -1) {\n            c_start = c_start + 6;\n            c_end = document.cookie.indexOf(\";\", c_start);\n            if (c_end == -1) {\n                c_end = document.cookie.length;\n            }\n            return unescape(document.cookie.substring(c_start, c_end));\n        }\n    return \"\";\n    }\n}\n/* Функция для поиска на html нужных полей, куда запишется token*/\nfunction setTokenToInputField(token) {\n        /* Получаем массив всех div элементов*/\n        var divTags = document.getElementsByTagName(\"div\");\n        /* Записываем в переменную ключевое слово, для поиска*/\n        var searchText = \"Authorization\";\n        /* В эту переменную запишем искомый узел (html node)*/\n        var found;\n        /* Перебираем элементы до тех пор, пока не найдем нужный*/\n        for (var i = 0; i < divTags.length; i++) {\n          if (divTags[i].textContent == searchText) {\n            found = divTags[i];\n            break;\n          }\n        }\n        /* Получаем общий узел (потомок) для input рядом с ключевым словом*/\n  \t\t\tvar parent = found.parentNode;\n        /* Получаем узел с инпутом, куда нужно будет добавить значение*/\n        var inputNode = parent.getElementsByTagName(\"input\")[0];\n        /* Записываем значение*/\n        /* Проверяем, пустое ли значение */\n        if(inputNode.value.length == 0) {\n          inputNode.value = token;\n        }\n      }\n\n/* Функция перезаписи token в cookie*/\n\nfunction setCookie(name, value, options) {\n  options = options || {};\n\n  var expires = options.expires;\n\n  if (typeof expires == \"number\" && expires) {\n    var d = new Date();\n    d.setTime(d.getTime() + expires * 1000);\n    expires = options.expires = d;\n  }\n  if (expires && expires.toUTCString) {\n    options.expires = expires.toUTCString();\n  }\n\n  value = encodeURIComponent(value);\n\n  var updatedCookie = name + \"=\" + value;\n\n  for (var propName in options) {\n    updatedCookie += \"; \" + propName;\n    var propValue = options[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n}\n\n/* Парсим URL*/\nvar params = window.location.search.replace('?','').split('&').reduce(\n\tfunction(p,e){\n  \tvar a = e.split('=');\n    p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n    return p;\n    },\n    \t{}\n );\n/* document.cookie = \"token\" + \"=\" + params['token'];*/\n\n/*проверяем, есть ли в URL значение token*/\nif(typeof params['token'] !== \"undefined\"){\n   /* Записываем token из URL в document.cookie*/\n   setCookie(\"token\",params['token']);\n}\n\n/* Записываем значение token в переменную с Bearer, чтобы использовать в дальнейшем*/\ntoken = \"Bearer \" + getCookie(\"token\");\n\n/* Удаляем token из URL*/\nvar newURL = location.href.split(\"?\")[0];\nwindow.history.replaceState('object', document.title, newURL);\n/* Записываем token в поля html; выполняется при любом клике на странице*/\n/**/\nsetInterval(function () {\n        setTokenToInputField(token)\n      }, 1000);","filePath":"common-site-builder.oas2.yml","variables":null,"whitelabel":null}}
